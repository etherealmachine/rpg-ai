// Code generated by qtc from "base.html.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line views/base.html.qtpl:1
package views

//line views/base.html.qtpl:1
import "golang.org/x/net/html"

//line views/base.html.qtpl:4
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line views/base.html.qtpl:4
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line views/base.html.qtpl:4
type Page interface {
//line views/base.html.qtpl:4
	Header() string
//line views/base.html.qtpl:4
	StreamHeader(qw422016 *qt422016.Writer)
//line views/base.html.qtpl:4
	WriteHeader(qq422016 qtio422016.Writer)
//line views/base.html.qtpl:4
	Content() string
//line views/base.html.qtpl:4
	StreamContent(qw422016 *qt422016.Writer)
//line views/base.html.qtpl:4
	WriteContent(qq422016 qtio422016.Writer)
//line views/base.html.qtpl:4
	BodyScripts() string
//line views/base.html.qtpl:4
	StreamBodyScripts(qw422016 *qt422016.Writer)
//line views/base.html.qtpl:4
	WriteBodyScripts(qq422016 qtio422016.Writer)
//line views/base.html.qtpl:4
}

//line views/base.html.qtpl:12
type BasePage struct {
	PublicURL string
	Scripts   []*html.Node
	Links     []*html.Node
	Styles    []*html.Node
}

//line views/base.html.qtpl:20
func (p *BasePage) StreamHeader(qw422016 *qt422016.Writer) {
//line views/base.html.qtpl:20
	qw422016.N().S(`
  <meta charset="utf-8" />
  <link rel="icon" href="`)
//line views/base.html.qtpl:22
	qw422016.E().S(p.PublicURL)
//line views/base.html.qtpl:22
	qw422016.N().S(`/favicon.ico" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <meta name="theme-color" content="#000000" />
  <link rel="apple-touch-icon" href="`)
//line views/base.html.qtpl:25
	qw422016.E().S(p.PublicURL)
//line views/base.html.qtpl:25
	qw422016.N().S(`/logo192.png" />
  <title>RPG.ai</title>
  `)
//line views/base.html.qtpl:27
	for _, node := range p.Styles {
//line views/base.html.qtpl:27
		qw422016.N().S(`
    <style>`)
//line views/base.html.qtpl:28
		if node.FirstChild != nil {
//line views/base.html.qtpl:28
			qw422016.N().S(node.FirstChild.Data)
//line views/base.html.qtpl:28
		}
//line views/base.html.qtpl:28
		qw422016.N().S(`</style>
  `)
//line views/base.html.qtpl:29
	}
//line views/base.html.qtpl:29
	qw422016.N().S(`
  `)
//line views/base.html.qtpl:30
	for _, node := range p.Links {
//line views/base.html.qtpl:30
		qw422016.N().S(`
    <link `)
//line views/base.html.qtpl:31
		for _, attr := range node.Attr {
//line views/base.html.qtpl:31
			qw422016.E().S(attr.Key)
//line views/base.html.qtpl:31
			qw422016.N().S(`=`)
//line views/base.html.qtpl:31
			qw422016.E().S(attr.Val)
//line views/base.html.qtpl:31
			qw422016.N().S(` `)
//line views/base.html.qtpl:31
		}
//line views/base.html.qtpl:31
		qw422016.N().S(` />
  `)
//line views/base.html.qtpl:32
	}
//line views/base.html.qtpl:32
	qw422016.N().S(`
`)
//line views/base.html.qtpl:33
}

//line views/base.html.qtpl:33
func (p *BasePage) WriteHeader(qq422016 qtio422016.Writer) {
//line views/base.html.qtpl:33
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/base.html.qtpl:33
	p.StreamHeader(qw422016)
//line views/base.html.qtpl:33
	qt422016.ReleaseWriter(qw422016)
//line views/base.html.qtpl:33
}

//line views/base.html.qtpl:33
func (p *BasePage) Header() string {
//line views/base.html.qtpl:33
	qb422016 := qt422016.AcquireByteBuffer()
//line views/base.html.qtpl:33
	p.WriteHeader(qb422016)
//line views/base.html.qtpl:33
	qs422016 := string(qb422016.B)
//line views/base.html.qtpl:33
	qt422016.ReleaseByteBuffer(qb422016)
//line views/base.html.qtpl:33
	return qs422016
//line views/base.html.qtpl:33
}

//line views/base.html.qtpl:35
func (p *BasePage) StreamBodyScripts(qw422016 *qt422016.Writer) {
//line views/base.html.qtpl:35
	qw422016.N().S(`
  `)
//line views/base.html.qtpl:36
	for _, node := range p.Scripts {
//line views/base.html.qtpl:36
		qw422016.N().S(`
    <script`)
//line views/base.html.qtpl:37
		for _, attr := range node.Attr {
//line views/base.html.qtpl:37
			qw422016.N().S(` `)
//line views/base.html.qtpl:37
			qw422016.E().S(attr.Key)
//line views/base.html.qtpl:37
			qw422016.N().S(`=`)
//line views/base.html.qtpl:37
			qw422016.E().S(attr.Val)
//line views/base.html.qtpl:37
			qw422016.N().S(` `)
//line views/base.html.qtpl:37
		}
//line views/base.html.qtpl:37
		qw422016.N().S(`>
      `)
//line views/base.html.qtpl:38
		if node.FirstChild != nil {
//line views/base.html.qtpl:38
			qw422016.N().S(node.FirstChild.Data)
//line views/base.html.qtpl:38
		}
//line views/base.html.qtpl:38
		qw422016.N().S(`
    </script>
  `)
//line views/base.html.qtpl:40
	}
//line views/base.html.qtpl:40
	qw422016.N().S(`
`)
//line views/base.html.qtpl:41
}

//line views/base.html.qtpl:41
func (p *BasePage) WriteBodyScripts(qq422016 qtio422016.Writer) {
//line views/base.html.qtpl:41
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/base.html.qtpl:41
	p.StreamBodyScripts(qw422016)
//line views/base.html.qtpl:41
	qt422016.ReleaseWriter(qw422016)
//line views/base.html.qtpl:41
}

//line views/base.html.qtpl:41
func (p *BasePage) BodyScripts() string {
//line views/base.html.qtpl:41
	qb422016 := qt422016.AcquireByteBuffer()
//line views/base.html.qtpl:41
	p.WriteBodyScripts(qb422016)
//line views/base.html.qtpl:41
	qs422016 := string(qb422016.B)
//line views/base.html.qtpl:41
	qt422016.ReleaseByteBuffer(qb422016)
//line views/base.html.qtpl:41
	return qs422016
//line views/base.html.qtpl:41
}

//line views/base.html.qtpl:43
func StreamPageTemplate(qw422016 *qt422016.Writer, p Page) {
//line views/base.html.qtpl:43
	qw422016.N().S(`
<!DOCTYPE html>
<html lang="en">

<head>
  `)
//line views/base.html.qtpl:48
	p.StreamHeader(qw422016)
//line views/base.html.qtpl:48
	qw422016.N().S(`
</head>

<body>
  <div style="height: 100%">
    <div id="navbar"></div>
    `)
//line views/base.html.qtpl:54
	p.StreamContent(qw422016)
//line views/base.html.qtpl:54
	qw422016.N().S(`
  </div>

  `)
//line views/base.html.qtpl:57
	p.StreamBodyScripts(qw422016)
//line views/base.html.qtpl:57
	qw422016.N().S(`
</body>

</html>
`)
//line views/base.html.qtpl:61
}

//line views/base.html.qtpl:61
func WritePageTemplate(qq422016 qtio422016.Writer, p Page) {
//line views/base.html.qtpl:61
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/base.html.qtpl:61
	StreamPageTemplate(qw422016, p)
//line views/base.html.qtpl:61
	qt422016.ReleaseWriter(qw422016)
//line views/base.html.qtpl:61
}

//line views/base.html.qtpl:61
func PageTemplate(p Page) string {
//line views/base.html.qtpl:61
	qb422016 := qt422016.AcquireByteBuffer()
//line views/base.html.qtpl:61
	WritePageTemplate(qb422016, p)
//line views/base.html.qtpl:61
	qs422016 := string(qb422016.B)
//line views/base.html.qtpl:61
	qt422016.ReleaseByteBuffer(qb422016)
//line views/base.html.qtpl:61
	return qs422016
//line views/base.html.qtpl:61
}
