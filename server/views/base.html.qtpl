{% import "golang.org/x/net/html" %}
{% import "github.com/etherealmachine/rpg.ai/server/models" %}

{%
interface Page {
  Header()
  Navbar()
  Content()
  BodyScripts()
  Footer()
}
%}

{% code
type BasePage struct {
  PublicURL string
  Scripts []*html.Node
  Links []*html.Node
  Styles []*html.Node
  User *models.User
}
%}

{% func (p *BasePage) Header() %}
  <meta charset="utf-8" />
  <link rel="icon" href="{%s p.PublicURL %}/favicon.ico" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <meta name="theme-color" content="#000000" />
  <link rel="apple-touch-icon" href="{%s p.PublicURL %}/logo192.png" />
  <title>RPG.ai</title>
  {% for _, node := range p.Styles %}
    <style>{% if node.FirstChild != nil %}{%s= node.FirstChild.Data %}{% endif %}</style>
  {% endfor %}
  {% for _, node := range p.Links %}
    <link {% for _, attr := range node.Attr %}{%s attr.Key %}={%s attr.Val %} {% endfor %} />
  {% endfor %}
{% endfunc %}

{% func (p *BasePage) BodyScripts() %}
  <script>
    {% if p.User != nil %}
      window.currentUserID = {%d int(p.User.ID) %};
    {% else %}
      window.currentUserID = undefined;
    {% endif %}
  </script>
  {% for _, node := range p.Scripts %}
    <script{% for _, attr := range node.Attr %} {%s attr.Key %}={%s attr.Val %} {% endfor %}>
      {% if node.FirstChild != nil %}{%s= node.FirstChild.Data %}{% endif %}
    </script>
  {% endfor %}
{% endfunc %}

{% func (p *BasePage) Navbar() %}
  <div class="container">
    <nav class="navbar navbar-expand-lg navbar-light justify-content-between">
      <a class="navbar-brand" href="/">RPG.ai</a>
      <form class="form-inline flex-grow-1" action="/search" method="GET">
        <div class="input-group flex-grow-1">
          <input class="form-control" style="max-width: 400px" type="search" name="q" placeholder="Search tilesets and tilemaps" aria-label="Search">
          <div class="input-group-append">
            <button class="btn btn-secondary" type="submit">
              <i class="fa fa-search"></i>
            </button>
          </div>
        </div>
      </form>
      <div class="d-flex align-items-center align-self-end">
        {% if p.User != nil %}
          <div class="nav-item dropdown">
            <button class="btn btn-link dropdown-toggle" id="navbarDropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
              Settings
          </button>
            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="navbarDropdown">
              <a href="/profile" class="dropdown-item">{%s p.User.Email %}</a>
              <a class="dropdown-item" href="/logout">Logout</a>
            </div>
          </div>
        {% else %}
          <div class="d-flex">
            <div class="GoogleLoginButton"></div>
            <div class="FacebookLoginButton"></div>
          </div>
        {% endif %}
      </div>
    </nav>
  </div>
{% endfunc %}

{% func (p *BasePage) Footer() %}
  <footer class="mt-auto py-2 bg-light">
    <div class="container">
      <nav class="navbar navbar-expand-lg navbar-light d-flex justify-content-between">
        <a class="nav-item" href="/about">About</a>
        <a class="nav-item" href="mailto:james.l.pettit@gmail.com">Contact</a>
        <small class="nav-item">&copy; Copyright 2020, James Pettit</small>
      </nav>
    </div>
  </footer>
{% endfunc %}

{% func PageTemplate(p Page) %}
<!DOCTYPE html>
<html lang="en">

<head>
  {%= p.Header() %}
</head>

<body>
  {%= p.Navbar() %}
  {%= p.Content() %}

  {%= p.BodyScripts() %}

  {%= p.Footer() %}
</body>

</html>
{% endfunc %}